// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("KULINARY_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String?  @unique
  username  String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Ingredient model
model Ingredient {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  // quantity Float
  description String?
  // owner    User     @relation("UserToIngredient", fields: [ownerId], references: [id])
  // ownerId  Int
  // recipes  Recipe[]
  Recipes     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      String?

  // pets     String[]
  // recipeId Int?

  // @@index([id])
}

// Recipe model
model Recipe {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   @unique
  description String
  ingredients String
  directions  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      String?

  // @@index([authorId])
  // Ingredient Ingredient[]
}

// datasource db {
//   provider     = "mysql"
//   url          = env("DATABASE_URL")
//   // url = `process.env.DATABASE_URL`
//   relationMode = "prisma"
// }

// schema.prisma

// User model with roles
// model User {
//   id       Int      @id @default(autoincrement())
//   username String   @unique
//   password String
//   name     String
//   role     UserRole @default(USER)
//   // recipes  Recipe[] @relation("UserToRecipe")
//   recipes  String   @default("")
//   // ingredients Ingredient[] @relation("UserToIngredient")
//   // Recipe   Recipe[]
// }

// // Enum for user roles
// enum UserRole {
//   USER
//   ADMIN
//   EDITOR
//   // Add more roles as needed
// }

// // Recipe model
// model Recipe {
//   id          Int      @id @default(autoincrement())
//   title       String   @unique
//   description String   @db.Text
//   ingredients String?  @db.Text
//   directions  String   @db.Text
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   author      String?

//   // @@index([authorId])
//   // Ingredient Ingredient[]
// }

// // Ingredient model
// model Ingredient {
//   id          Int     @id @default(autoincrement())
//   name        String  @unique
//   // quantity Float
//   description String? @db.Text
//   // owner    User     @relation("UserToIngredient", fields: [ownerId], references: [id])
//   // ownerId  Int
//   // recipes  Recipe[]
//   Recipes     String?
//   // pets     String[]
//   // recipeId Int?

//   // @@index([id])
// }
